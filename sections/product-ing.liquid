<style>
    *{
        padding: 0;
        margin: 0;
        box-sizing: border-box;
    }
    #shopify-section-{{ section.id }}{
        --main-color-d9: {{ section.settings.main-color }};
        --text-color-d9: {{ section.settings.text-color }};
}
.pi-37-d9-main{
    width: 100%;
    background: #FCF8F5;
}
.pi-37-d9-inner{
    max-width: 1140px;
    width: 95%;
    margin: 0 auto;
    padding: 50px 0;
}
.pi-37-d9-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 60px;
}

.pi-37-d9-ingredients {
    width: 50%;
    padding: 20px;
}

.pi-37-d9-pills button {
    display: inline-block;
    margin: 7px;
    padding: 10px 20px;
    background: #f0f0f0;
    border: 1px solid var(--main-color-d9);
    border-radius: 20px;
    cursor: pointer;
}
.pi-37-d9-pills button:first-child{
    margin-left: 0;
}
.pi-37-d9-pills button.active-pill-d9 {
    background: #717171;
    color: white;
}
.pi-37-slider-container{
    width: 40%;
    position: relative;
    border: 1px solid var(--main-color-d9);
    padding-bottom: 30px;
    border-radius: 30px;
}
.pi-37-d9-slider {
    width: 100%;
    overflow: hidden;
}

.pi-37-d9-slides {
    display: flex;
    transition: transform 0.5s ease-in-out;
}

.pi-37-d9-slide {
    min-width: 100%;
    box-sizing: border-box;
    padding: 20px;
}

.pi-37-d9-indicators {
    position: absolute;
    bottom: 35px;
    left: 50%;
    transform: translateX(-50%);
}

.pi-37-d9-dot {
    height: 15px;
    width: 15px;
    margin: 0 5px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
    cursor: pointer;
}

.pi-37-d9-dot.active {
    background-color: #717171;
}

.pi-37-d9-arrows {
    position: absolute;
    width: 100%;
    display: flex;
    justify-content: center;
    gap: 40px;
    bottom: -26px;
}

.pi-37-d9-arrow {
    background: rgba(0, 0, 0, 0.9);
    border: none;
    color: white;
    padding: 10px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    width: 46px;
    height: 46px;
}
.pi-37-d9-arrow svg{
    fill: #fff;
}

.pi-37-d9-arrow.not-available-d9 {
    background: rgba(0, 0, 0, 0.2);
    cursor: not-allowed;
}
.pi-37-d9-arrow svg{
    width: 14px;
    height: 14px;
}
.pi-37-d9-slides.grabbing {
    cursor: grabbing;
}
.img-content-pi-37-d9{
    width: 70%;
    margin: 30px auto;
    overflow: hidden;
    border-radius: 50%;
    border: 5px solid var(--main-color-d9);
}
.img-content-pi-37-d9 img{
    width: 100%;
    height: 100%;
    object-fit: contain;
}
.pi-37-d9-arrow-left{
    transform: rotate(180deg);
}
.pi-37-d9-slide h2{
    font-size: ;
}
.pi-37-d9-slide h2, .pi-37-d9-slide p{
    text-align: center;
    margin: 10px 0;
    line-height: 130%;
}
.pi-37-d9-main-btn{
    text-decoration: none;
    border: 1px solid var(--main-color-d9);
    border-radius: 50px;
    transition: all .4s;
    padding: 10px 20px;
    display: inline-block;
    min-width: 120px;
    text-align: center;
}
.pi-37-d9-main-btn.style-btn-1-d9{

}
</style>
<div class="pi-37-d9-main">
<div class="pi-37-d9-inner">
<div class="pi-37-d9-container">
    <div class="pi-37-d9-ingredients">
        <h2> {{ section.settings.heading }} </h2>
        {{ section.settings.subtext }}
        <div class="pi-37-d9-pills">
            {% for block in section.blocks %}
                {% if block.settings.ingredient_name != blank %}
                <button class="pi-37-d9-pill">{{ block.settings.ingredient_name }}</button>
                {% endif %}
            {% endfor %}
        </div>
        <a class="pi-37-d9-main-btn" href="{{ section.settings.btn-link-1 }}">{{ section.settings.btn-text-1 }}</a>
        <a class="pi-37-d9-main-btn" href="{{ section.settings.btn-link-2 }}">{{ section.settings.btn-text-2 }}</a>
    </div>
    <div class="pi-37-slider-container">
    <div class="pi-37-d9-slider">
        <div class="pi-37-d9-slides">
            {% for block in section.blocks %}
                <div class="pi-37-d9-slide">
                    <h2> {{ block.settings.ingredient_name }} </h2> 
                    {{ block.settings.content-text }}   
                    <div class="img-content-pi-37-d9">
                        <img src="{{ block.settings.content-img |  img_url: 'medium' }}" alt="">
                    </div>
                </div>
            {% endfor %}
        </div>
        <div class="pi-37-d9-indicators">
            {% for block in section.blocks %}
                <span class="pi-37-d9-dot"></span>
            {% endfor %}
        </div>
        <div class="pi-37-d9-arrows">
            <button class="pi-37-d9-arrow pi-37-d9-arrow-left">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="307.046px" height="307.046px" viewBox="0 0 307.046 307.046" style="enable-background:new 0 0 307.046 307.046;" xml:space="preserve">
              	<path d="M281.828,142.427L144.002,4.597c-6.129-6.129-16.07-6.129-22.199,0l-11.101,11.101c-6.133,6.133-6.133,16.076,0,22.201
              		l92.071,92.077H36.321c-8.668,0-15.701,7.035-15.701,15.701v15.699c0,8.664,7.033,15.701,15.701,15.701h166.445l-92.063,92.059
              		c-6.133,6.136-6.133,16.086,0,22.209l11.101,11.101c6.129,6.136,16.07,6.136,22.199,0l137.826-137.831
              		C287.959,158.487,287.959,148.556,281.828,142.427z"></path>
              
              </svg>
            </button>
            <button class="pi-37-d9-arrow pi-37-d9-arrow-right">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="307.046px" height="307.046px" viewBox="0 0 307.046 307.046" style="enable-background:new 0 0 307.046 307.046;" xml:space="preserve">
              	<path d="M281.828,142.427L144.002,4.597c-6.129-6.129-16.07-6.129-22.199,0l-11.101,11.101c-6.133,6.133-6.133,16.076,0,22.201
              		l92.071,92.077H36.321c-8.668,0-15.701,7.035-15.701,15.701v15.699c0,8.664,7.033,15.701,15.701,15.701h166.445l-92.063,92.059
              		c-6.133,6.136-6.133,16.086,0,22.209l11.101,11.101c6.129,6.136,16.07,6.136,22.199,0l137.826-137.831
              		C287.959,158.487,287.959,148.556,281.828,142.427z"></path>
              
              </svg>
            </button>
        </div>
    </div>
    </div>
</div>
</div>
</div>
  <script>
(function() {
    document.addEventListener('DOMContentLoaded', () => {
        const containerSelector = '.pi-37-d9-container';

        document.querySelectorAll(containerSelector).forEach(container => {
            const pills = container.querySelectorAll('.pi-37-d9-pill');
            const slides = container.querySelector('.pi-37-d9-slides');
            const dots = container.querySelectorAll('.pi-37-d9-dot');
            const leftArrow = container.querySelector('.pi-37-d9-arrow-left');
            const rightArrow = container.querySelector('.pi-37-d9-arrow-right');

            let currentIndex = 0;
            let startX = 0;
            let currentTranslate = 0;
            let prevTranslate = 0;
            let isDragging = false;
            let animationID;

            function updateSlide(index) {
                currentTranslate = index * -100;
                prevTranslate = currentTranslate;
                slides.style.transform = `translateX(${currentTranslate}%)`;
                dots.forEach(dot => dot.classList.remove('active'));
                dots[index].classList.add('active');
                pills.forEach(pill => pill.classList.remove('active-pill-d9'));
                pills[index].classList.add('active-pill-d9');
                currentIndex = index;
                updateArrows();
            }

            function updateArrows() {
                if (currentIndex === 0) {
                    leftArrow.classList.add('not-available-d9');
                } else {
                    leftArrow.classList.remove('not-available-d9');
                }
                if (currentIndex === pills.length - 1) {
                    rightArrow.classList.add('not-available-d9');
                } else {
                    rightArrow.classList.remove('not-available-d9');
                }
            }

            function startDrag(event) {
                startX = event.type.includes('mouse') ? event.clientX : event.touches[0].clientX;
                isDragging = true;
                animationID = requestAnimationFrame(animation);
                slides.classList.add('grabbing');
            }

            function moveDrag(event) {
                if (isDragging) {
                    const currentPosition = event.type.includes('mouse') ? event.clientX : event.touches[0].clientX;
                    const movedBy = currentPosition - startX;
                    currentTranslate = prevTranslate + (movedBy / container.clientWidth) * 100;
                }
            }

            function endDrag() {
    cancelAnimationFrame(animationID);
    isDragging = false;
    slides.classList.remove('grabbing');
    const movedBy = currentTranslate - prevTranslate;
    
    // Calculate the percentage equivalent of 5 pixels based on the container width
    const thresholdPercentage = (5 / container.clientWidth) * 100;

    if (movedBy < -thresholdPercentage) {
        if (currentIndex < pills.length - 1) currentIndex += 1;
    }
    if (movedBy > thresholdPercentage) {
        if (currentIndex > 0) currentIndex -= 1;
    }
    updateSlide(currentIndex);
}


            function animation() {
                slides.style.transform = `translateX(${currentTranslate}%)`;
                if (isDragging) requestAnimationFrame(animation);
            }

            pills.forEach((pill, index) => {
                pill.addEventListener('click', () => {
                    updateSlide(index);
                });
            });

            dots.forEach((dot, index) => {
                dot.addEventListener('click', () => {
                    updateSlide(index);
                });
            });

            leftArrow.addEventListener('click', () => {
                if (currentIndex > 0) {
                    updateSlide(currentIndex - 1);
                }
            });

            rightArrow.addEventListener('click', () => {
                if (currentIndex < pills.length - 1) {
                    updateSlide(currentIndex + 1);
                }
            });

            slides.addEventListener('mousedown', startDrag);
            slides.addEventListener('mousemove', moveDrag);
            slides.addEventListener('mouseup', endDrag);
            slides.addEventListener('mouseleave', endDrag);

            slides.addEventListener('touchstart', startDrag);
            slides.addEventListener('touchmove', moveDrag);
            slides.addEventListener('touchend', endDrag);

            updateSlide(currentIndex);
            updateArrows();
        });
    });
})();

  </script>

{% schema %}
{
  "name": "Product Ingradiants",
  "settings": [
    {
        "type": "header",
        "content": "Basic Configurations"
    },
    {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "High quality ingredients"
    },
    {
        "type": "richtext",
        "id": "subtext",
        "label": "Text",
        "default": "<p>We carefully selected plant-based ingredients to create the world's healthiest protein coffee that's low in sugar, high in protein, and tastes delicious.</p>"
    },
    {
        "type": "text",
        "id": "btn-text-1",
        "label": "Button Label 1",
        "default": "Pre Order Now"
    },
    {
        "type": "url",
        "id": "btn-link-1",
        "label": "Button Url 1"
    },
    {
        "type": "text",
        "id": "btn-text-2",
        "label": "Button Label 2",
        "default": "Button"
    },
    {
        "type": "url",
        "id": "btn-link-2",
        "label": "Button Url 2"
    },
    {
        "type": "header",
        "content": "Desktop Configurations"
    },
    {
        "type": "header",
        "content": "Color Schemes"
    },
    {
        "type": "color",
        "id": "main-color",
        "label": "Main Color",
        "default": "#983a3e"
    },
    {
        "type": "color",
        "id": "text-color",
        "label": "text-color",
        "default": "#222"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "text",
          "id": "ingredient_name",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "content-text",
          "label": "Description"
        },
        {
            "type": "image_picker",
            "id": "content-img",
            "label": "Upload Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Ingradiants",
      "category": "Custom"
    }
  ]
}
{% endschema %}
