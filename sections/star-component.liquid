<style>
.star-sn {
  width: 100px; /* Set your desired width */
  height: 100px; /* Set your desired height */
  background: red;
  background-size: cover; /* Ensures the background image covers the star */
  background-position: center; /* Center the image inside the star */
  display: inline-block;
  clip-path: url(#star-shape-s); /* Use the clip-path to apply the star shape */

}
#starSvg{
  position: relative;
}
.text-container:after{
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left:0;
  background: pink;
}  
</style>
<svg id="starSvg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="100" height="100">
  <defs>
    <mask id="dynamicFillMask" x="0" y="0" width="100" height="100">
      <rect id="fillRect" x="0" y="0" width="100%" height="100" fill="white"/>
    </mask>
  </defs>

  <polygon points="50,15 61,35 88,35 67,57 74,85 50,70 26,85 33,57 12,35 39,35"
           fill="gold" stroke="black" stroke-width="2" mask="url(#dynamicFillMask)"/>
</svg>

<!-- <script>
  function setStarFill(percentage) {
    const fillRect = document.getElementById('fillRect');
    fillRect.setAttribute('width', `${percentage}%`);
  }

  // Example: Set fill to 50%
  setStarFill(100); // Change the percentage here to control fill
</script> -->


<div class="text-container">
{% for i in (1..5) %}
  {% render 'ss-stars-v1' %}
{% endfor %}
</div>
{% schema %}
  {
    "name": "Star component",
    "settings": [],
    "presets": [
      {
        "name": "Star component"
      }
    ]
  }
{% endschema %}