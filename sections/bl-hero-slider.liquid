{% comment %}
  BrightlinkAV-style hero slider with vanilla JS (no libraries).
  - Each slide is a block with heading, subheading, button, image, vertical alignment (top, center, bottom)
  - Smooth sliding, autoplay, infinite loop
  - All classes use bl- prefix
  - Fully responsive
{% endcomment %}

<style>
  .bl-hero-slider {
    position: relative;
    width: 100%;
    max-width: 1600px;
    margin: 0 auto;
    overflow: hidden;
    background: #fff;
    aspect-ratio: 3/1;
  }
  .bl-hero-slider__track {
    display: flex;
    transition: transform 0.7s cubic-bezier(.4,0,.2,1);
    will-change: transform;
    height: 100%;
  }
  .bl-hero-slider__slide {
    min-width: 100%;
    box-sizing: border-box;
    position: relative;
    display: flex;
    align-items: stretch;
    justify-content: flex-start;
    height: 100%;
  }
  .bl-hero-slider__bg {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background-size: cover !important;
    background-repeat: no-repeat;
    background-position: right center;
    z-index: 1;
    pointer-events: none;
    object-fit: contain;
  }
  .bl-hero-slider__content {
    width: 40%;
    display: flex;
    flex-direction: column;
    justify-content: var(--bl-align, center);
    align-items: flex-start;
    padding: 0 3vw;
    z-index: 2;
    background: none;
  }
  .bl-hero-slider__heading {
    color: #5ca6f7;
    font-size: 2.2em;
    font-weight: 800;
    margin-bottom: 0.5em;
    line-height: 1.1;
  }
  .bl-hero-slider__subheading {
    color: #444;
    font-size: 1.1em;
    margin-bottom: 2em;
  }
  .bl-hero-slider__button {
    background: #5ca6f7;
    color: #fff;
    font-size: 1.1em;
    font-weight: 700;
    padding: 16px 40px;
    border: none;
    border-radius: 2px;
    text-decoration: none;
    transition: background 0.2s;
    cursor: pointer;
    display: inline-block;
  }
  .bl-hero-slider__button:hover,
  .bl-hero-slider__button:focus {
    background: #3578e5;
  }
  .bl-hero-slider__dots {
    position: absolute;
    left: 50%;
    bottom: 32px;
    transform: translateX(-50%);
    display: flex;
    gap: 12px;
    z-index: 10;
  }
  .bl-hero-slider__dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: #dbeafe;
    border: none;
    cursor: pointer;
    transition: background 0.2s;
  }
  .bl-hero-slider__dot--active {
    background: #5ca6f7;
  }
  @media (max-width: 900px) {
    .bl-hero-slider__content {
      width: 60%;
      padding: 0 5vw;
    }
    .bl-hero-slider__img {
      width: 40%;
    }
  }
  @media (max-width: 600px) {
    .bl-hero-slider {
      aspect-ratio: 1.1/1;
    }
    .bl-hero-slider__slide {
      flex-direction: column;
    }
    .bl-hero-slider__content, .bl-hero-slider__img {
      width: 100%;
      padding: 0 16px;
    }
    .bl-hero-slider__img {
      margin: 0 auto;
      height: 180px;
    }
  }
</style>

<div class="bl-hero-slider" id="bl-hero-slider-{{ section.id }}">
  <div class="bl-hero-slider__track">
    {% for block in section.blocks %}
      <div class="bl-hero-slider__slide" style="--bl-align: {{ block.settings.vertical_align }};">
        {% if block.settings.image != blank %}
          <div class="bl-hero-slider__bg" style="background-image: url('{{ block.settings.image | image_url: width: 1000 }}'); display: block;"></div>
        {% endif %}
        <div class="bl-hero-slider__content">
          {% if block.settings.heading != blank %}
            <div class="bl-hero-slider__heading">{{ block.settings.heading }}</div>
          {% endif %}
          {% if block.settings.subheading != blank %}
            <div class="bl-hero-slider__subheading">{{ block.settings.subheading }}</div>
          {% endif %}
          {% if block.settings.button_label != blank and block.settings.button_link != blank %}
            <a href="{{ block.settings.button_link }}" class="bl-hero-slider__button">{{ block.settings.button_label }}</a>
          {% endif %}
        </div>
      </div>
    {% endfor %}
  </div>
  <div class="bl-hero-slider__dots"></div>
</div>

<script>
(function() {
  const slider = document.getElementById('bl-hero-slider-{{ section.id }}');
  const track = slider.querySelector('.bl-hero-slider__track');
  const slides = Array.from(track.children);
  const dotsContainer = slider.querySelector('.bl-hero-slider__dots');
  let current = 1; // Start at first real slide (after clone)
  const slideCount = slides.length;

  // --- Infinite Loop Setup ---
  // Clone last and first slides
  const firstClone = slides[0].cloneNode(true);
  const lastClone = slides[slideCount-1].cloneNode(true);
  firstClone.classList.add('bl-hero-slider__slide--clone');
  lastClone.classList.add('bl-hero-slider__slide--clone');
  track.appendChild(firstClone);
  track.insertBefore(lastClone, slides[0]);
  const allSlides = Array.from(track.children);
  const realCount = slideCount;

  // Set initial position
  function setTrackTransition(val) { track.style.transition = val; }
  function setTrackPosition(idx) {
    track.style.transform = `translateX(-${100 * idx}%)`; 
  }
  setTrackTransition('none');
  setTrackPosition(current);
  setTimeout(() => setTrackTransition('transform 0.7s cubic-bezier(.4,0,.2,1)'), 20);

  // --- Dots ---
  function renderDots() {
    dotsContainer.innerHTML = '';
    for (let i = 0; i < realCount; i++) {
      const dot = document.createElement('button');
      dot.className = 'bl-hero-slider__dot' + (i === 0 ? ' bl-hero-slider__dot--active' : '');
      dot.setAttribute('aria-label', 'Go to slide ' + (i+1));
      dot.addEventListener('click', () => goTo(i+1));
      dotsContainer.appendChild(dot);
    }
  }
  function updateDots(idx) {
    Array.from(dotsContainer.children).forEach((dot, i) => {
      dot.classList.toggle('bl-hero-slider__dot--active', i === ((idx-1+realCount)%realCount));
    });
  }

  // --- Slide Logic ---
  function goTo(idx, instant) {
    current = idx;
    setTrackTransition(instant ? 'none' : 'transform 0.7s cubic-bezier(.4,0,.2,1)');
    setTrackPosition(current);
    updateDots(current);
  }
  function next() { goTo(current+1); }
  function prev() { goTo(current-1); }

  // --- Autoplay ---
  // function startAutoplay() { interval = setInterval(next, 4000); }
  // function cancelAutoplay() { clearInterval(interval); }

  // Remove all calls to startAutoplay and cancelAutoplay

  // --- Drag/Swipe ---
  let isDragging = false, startX = 0, currentTranslate = 0, prevTranslate = 0, animationID, dragThreshold = 50;
  let dragStarted = false;

  function setSliderPosition(translate) { track.style.transform = `translateX(${translate}px)`; }
  function animation() { setSliderPosition(currentTranslate); if (isDragging) requestAnimationFrame(animation); }
  function getPositionX(e) { return e.type.startsWith('touch') ? e.touches[0].clientX : e.clientX; }

  function preventSelection(e) {
    e.preventDefault();
  }

  function touchStart(e) {
    if (e.type === 'mousedown' && e.button !== 0) return; // Only left mouse button
    isDragging = true;
    dragStarted = true;
    startX = getPositionX(e);
    prevTranslate = -current * slider.offsetWidth;
    currentTranslate = prevTranslate;
    setTrackTransition('none');
    animationID = requestAnimationFrame(animation);
    document.body.style.userSelect = 'none';
    window.addEventListener('mousemove', touchMove);
    window.addEventListener('mouseup', touchEnd);
    window.addEventListener('touchmove', touchMove, { passive: false });
    window.addEventListener('touchend', touchEnd);
    window.addEventListener('mouseleave', touchEnd);
  }
  function touchMove(e) {
    if (!isDragging) return;
    const currentX = getPositionX(e);
    const diff = currentX - startX;
    currentTranslate = prevTranslate + diff;
  }
  function touchEnd(e) {
    if (!isDragging) return;
    isDragging = false;
    dragStarted = false;
    cancelAnimationFrame(animationID);
    const movedBy = currentTranslate - prevTranslate;
    if (movedBy < -dragThreshold) {
      next();
    } else if (movedBy > dragThreshold) {
      prev();
    } else {
      goTo(current);
    }
    setTrackTransition('transform 0.7s cubic-bezier(.4,0,.2,1)');
    document.body.style.userSelect = '';
    window.removeEventListener('mousemove', touchMove);
    window.removeEventListener('mouseup', touchEnd);
    window.removeEventListener('touchmove', touchMove);
    window.removeEventListener('touchend', touchEnd);
    window.removeEventListener('mouseleave', touchEnd);
  }
  track.addEventListener('mousedown', touchStart);
  track.addEventListener('touchstart', touchStart, { passive: true });
  // Remove global listeners from previous version
  // window.addEventListener('mousemove', touchMove);
  // window.addEventListener('touchmove', touchMove, { passive: false });
  // window.addEventListener('mouseup', touchEnd);
  // window.addEventListener('touchend', touchEnd);

  // --- Infinite Loop Correction ---
  track.addEventListener('transitionend', () => {
    if (current === 0) {
      goTo(realCount, true); // jump to last real slide
    } else if (current === realCount+1) {
      goTo(1, true); // jump to first real slide
    }
  });

  // slider.addEventListener('mouseenter', cancelAutoplay);
  // slider.addEventListener('mouseleave', startAutoplay);

  renderDots();
  goTo(1, true);
  // startAutoplay();
})();
</script>

{% schema %}
{
  "name": "bl-hero-slider",
  "class": "bl-hero-slider-section",
  "settings": [],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subheading"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "select",
          "id": "vertical_align",
          "label": "Content Vertical Alignment",
          "options": [
            { "value": "flex-start", "label": "Top" },
            { "value": "center", "label": "Center" },
            { "value": "flex-end", "label": "Bottom" }
          ],
          "default": "center"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "bl-hero-slider",
      "category": "Banner",
      "blocks": [
        {
          "type": "slide",
          "settings": {
            "heading": "Brightlink Small Pitch LED Wall",
            "subheading": "Any size from 108\" to 500\" +",
            "button_label": "Shop Now",
            "button_link": "/collections/all",
            "image": "",
            "vertical_align": "center"
          }
        },
        {
          "type": "slide",
          "settings": {
            "heading": "Ultra HD Video Walls",
            "subheading": "Stunning clarity for any environment.",
            "button_label": "Learn More",
            "button_link": "/pages/ultra-hd",
            "image": "",
            "vertical_align": "center"
          }
        },
        {
          "type": "slide",
          "settings": {
            "heading": "Seamless Installation",
            "subheading": "Professional support from start to finish.",
            "button_label": "Get a Quote",
            "button_link": "/pages/contact",
            "image": "",
            "vertical_align": "center"
          }
        },
        {
          "type": "slide",
          "settings": {
            "heading": "Custom LED Solutions",
            "subheading": "Tailored to your space and needs.",
            "button_label": "See Solutions",
            "button_link": "/pages/custom-led",
            "image": "",
            "vertical_align": "center"
          }
        }
      ]
    }
  ]
}
{% endschema %} 